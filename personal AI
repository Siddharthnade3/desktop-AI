import speech_recognition as sr
import pyttsx3
import datetime
import pywhatkit
from googlesearch import search

# Initialize the speech recognition and text-to-speech engines
recognizer = sr.Recognizer()
engine = pyttsx3.init()
#engine.setPropery('voice[1],id')

def speak(text):
    engine.say(text)
    engine.runAndWait()

def listen():
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)
        try:
            command = recognizer.recognize_google(audio).lower()
            print("You said:", command)
            return command
        except sr.UnknownValueError:
            print("Sorry, could not understand audio.")
            return ""
        except sr.RequestError as e:
            print(f"Could not request results from Google Speech Recognition service; {e}")
            return ""

def play_song(song_name):
    speak(f"Playing {song_name} on YouTube.")
    pywhatkit.playonyt(song_name)

def search_google(query):
    speak(f"Searching Google for {query}.")
    for j in search(query, num=1, stop=1, pause=2):
        print(j)
        speak(f"Here is a result from Google: {j}")

def virtual_assistant():
    speak("Jay shree Ram ! I am your virtual assistant. How can I help you today?")

    while True:
        command = listen()

        if "what is your name" in command:
            speak("I am a Robot 2.0.")

        elif "time" in command:
            current_time = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"The current time is {current_time}")

        elif "play" in command and "song" in command:
            song_name = command.replace("play", "").replace("song", "").strip()
            play_song(song_name)

        elif "search Google for" in command:
            query = command.replace("search Google for", "").strip()
            search_google(query)

        elif "stop" in command:
            speak("Goodbye!")
            break

        else:
            speak("I'm sorry, I didn't understand that command. Please try again.")

if __name__ == "__main__":
    virtual_assistant()
